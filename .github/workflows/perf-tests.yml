name: Performance Tests

on:
  workflow_dispatch:
    inputs:
      max_requests:
          description: 'Número máximo de requisições simultâneas'
          required: true
          default: '603'
          type: string

  workflow_run:
    workflows: ["Continuous Deployment"]
    types: [completed]
    branches: [main]

jobs:
  performance-tests:
    runs-on: ubuntu-24.04

    env:
      PARTICIPANTE: ${{ github.repository_owner }}_java_01
      RESULTS_FILE_PATH: actual-rinha/participantes/${{ github.repository_owner }}_java_01/final-results.json

    permissions:
      contents: write
      packages: write

    steps:
      - name: 📦 Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: 📦 Checkout Rinha Repository
        uses: actions/checkout@v5
        with:
          repository: zanfranceschi/rinha-de-backend-2025
          path: ./actual-rinha
          submodules: recursive

      - name: 🐳 Setup Docker Compose
        uses: docker/setup-compose-action@v1

      - name: 🛠️ Setup jq
        run: sudo apt-get install -y jq

      - name: 🧪 Setup k6
        uses: grafana/setup-k6-action@v1
        with:
          k6-version: '1.1.0'

      - name: 💰 Setup Payment Processors
        run: |
          pushd actual-rinha/payment-processor/ > /dev/null
            docker compose up --build -d 1> /dev/null 2>&1
          popd > /dev/null

      - name: 📈 Create reports folder
        run: mkdir -p reports/{backend-01,backend-02}

      - name: 🚀 Setup ${{ env.PARTICIPANTE }} Backend
        working-directory: docs/submission/
        run: |
          docker compose up --build -d 1> /dev/null 2>&1    

      - name: 🔍 Check running containers
        run: |
          docker ps

      - name: 📈 Run Performance Tests
        env:
          MAX_REQUESTS: ${{ github.event.inputs.max_requests || 603 }}
          PARTICIPANT: ${{ env.PARTICIPANTE }}
        run: |
          echo "Running performance tests with max requests: $MAX_REQUESTS"
          mkdir -p actual-rinha/participantes/${{ env.PARTICIPANTE }}
          touch ${{ env.RESULTS_FILE_PATH }}
          pushd actual-rinha/rinha-test > /dev/null
            k6 run --out json=${{ github.workspace }}/k6_results.json rinha-final.js
          popd > /dev/null

      - name: ⬇️ Tear Down Environment
        working-directory: docs/submission/
        run: |
          echo "Containers Still running:"
          docker ps
          echo "Stopping containers..."
          docker compose stop --timeout 30

      - name: ⬆️ Upload Results
        uses: actions/upload-artifact@v4
        with:
          name: results-${{ github.sha }}.json
          path: ${{ env.RESULTS_FILE_PATH }}
          compression-level: '0'

      - name: 📊 Process Performance Results
        run: |
          PERF_FILE="perf.md"
          COMMIT_SHA="${{ github.sha }}"
          TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          RUN_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"

          echo "Extracting metrics from $RESULTS_FILE_PATH"
          TEST_SCRIPT=rinha-final.js
          P99=$(jq -r '.p99.valor' $RESULTS_FILE_PATH)
          MAX_REQUESTS=$(jq -r '.p99.max_requests' $RESULTS_FILE_PATH)
          SUCCESSFUL_REQUESTS=$(jq -r '.pagamentos_solicitados.qtd_sucesso' $RESULTS_FILE_PATH)
          FAILED_REQUESTS=$(jq -r '.pagamentos_solicitados.qtd_falha' $RESULTS_FILE_PATH)
          LAG=$(jq -r '.lag.lag' $RESULTS_FILE_PATH)
          SCORE=$(jq -r '.total_liquido' $RESULTS_FILE_PATH)
          COMMIT_URL="https://github.com/${{ github.repository }}/commit/${COMMIT_SHA}"
          RUN_LINK="[#${{ github.run_number }}]($RUN_URL)"

          if [ ! -f "$PERF_FILE" ]; then
            echo "# Performance Test Results" > "$PERF_FILE"
            echo "" >> "$PERF_FILE"
            echo "| Test Run | Script | Commit | Timestamp | Max. Requests | P99 (ms) | Success Requests | Failed Requests | Lag | Score |" >> "$PERF_FILE"
            echo "|----------|--------|--------|-----------|---------------|----------|------------------|-----------------|-----|-------|" >> "$PERF_FILE"
          fi

          NEW_LINE="| ${RUN_LINK} | ${TEST_SCRIPT} | [${COMMIT_SHA::7}](${COMMIT_URL}) | ${TIMESTAMP} | ${MAX_REQUESTS} | ${P99} | ${SUCCESSFUL_REQUESTS} | ${FAILED_REQUESTS} | ${LAG} | ${SCORE} |"

          echo "$NEW_LINE" >> "$PERF_FILE"

          echo "Data added to $PERF_FILE"
          cat "$PERF_FILE"

      - name: 📤 Commit Performance Results
        if: github.ref == 'refs/heads/main'
        run: |
          git config user.name "radagastbot[bot]"
          git config user.email "radagastbot[bot]@users.noreply.github.com"
          git add perf.md
          git commit -m "docs(performance): Update performance test results for ${{ github.sha }}"
          git push